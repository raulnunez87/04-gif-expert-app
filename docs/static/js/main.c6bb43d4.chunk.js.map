{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cC4BCQ,EAhCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiBzC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAOF,GAFN,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCaNO,EAXK,SAAC,GAAuB,IAApBH,EAAmB,EAAnBA,MAAOV,EAAY,EAAZA,IAE3B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCsBGO,EAvBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHN,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPxB,EAAUC,GACLtB,MAAM,SAAA8C,GACHF,EAAS,CACLf,KAAMiB,EACNJ,SAAS,SAGtB,CAACpB,IAEGqB,EDX0BI,CAAczB,GAAlCa,EAHiB,EAGtBN,KAAaa,EAHS,EAGTA,QAIrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SACMH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADCA,EAAIC,aEenBe,EA9BM,WAAM,MAGaxC,mBAAS,CAAC,cAHvB,mBAGhByC,EAHgB,KAGJ1C,EAHI,KAUvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ0C,EAAWlB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjBlC4B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,QAG5BxD,M","file":"static/js/main.c6bb43d4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( { setCategories } ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats ] );\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n          <input \n            type=\"text\"\n            value={ inputValue }\n            onChange= { handleInputChange }\n            />  \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory;\n","export const getGifts = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=M2hB48D6IHp6draOBCdmzXuAQG66vh1Y`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n    \n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        };\n    });\n\n    return gifs;\n}","import React from 'react';\n\nconst GifGridItem = ( { title, url } ) =>  {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    );\n\n}\n\nexport default GifGridItem;\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\n// { useState, useEffect }\n\nconst GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n    const { data:images, loading } = useFetchGifs( category );\n\n    // .then( imgs => setImages( imgs ) );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n            <div className=\"card-grid\">\n                { images.map(img => (\n                    <GifGridItem\n                        key={ img.id } \n                        { ...img }    \n                    />\n                )) }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport { getGifts } from \"../helpers/getGifts\";\n\nexport const useFetchGifs = ( category ) => {\n    \n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect( () => {\n        getGifts( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false,\n                });\n            } );\n    }, [category]);\n\n    return state; // { data: [], loading: true };\n\n};","import React, { useState } from 'react';\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    // const categories = ['One Puncg', 'Samurai X', 'Dragon Ball'];\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     // setCategories([...categories, 'Hunter X']);\n    //     setCategories( cats => [...cats, 'Hunter X'] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                { \n                    categories.map( category => (\n                        <GifGrid\n                            key={ category }\n                            category={ category } \n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('app')\n);\n\nreportWebVitals();\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr>"],"sourceRoot":""}